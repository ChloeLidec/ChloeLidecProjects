"""Fichier contenant la fonction programme principal
qui permet l'interaction avec l'utilisateur"""
import histoire2foot

#Ici vos fonctions dédiées aux interactions
def afficher_menu(titre, liste_options):
    """affiche le menu d'interaction

    Args:
        titre (str): [description]
        liste_options (list de str): [description]
    """
    print("+", "-".ljust(len(titre)+2, "-"), "+")
    print("| ", titre, " |")
    print("+", "-".ljust(len(titre)+2, "-"), "+")
    cpt = 1
    for opt in liste_options:
        print(cpt, " -> ", opt)
        cpt += 1
#afficher_menu("MENU DE MON APPLICATION", ["charger", "deux", "trois"])
def demander_nombre(message, borne_max):
    """affiche le message et att l'util

    Args:
        message (str): message de deamnde
        borne_max (int): le nbr a ne pas dépasser
    """
    res = input(message)
    if res.isdecimal():
        if 1 <= int(res) <= borne_max:
            return int(res)
    return None
#print(demander_nombre("mess",5))
def menu(titre, liste_options):
    """fusion des fct affihcage et demande

    Args:
        titre (str): titre menu
        liste_options (list): liste menu

    Returns:
       fct: fonction demander nombre
    """
    afficher_menu(titre, liste_options)
    return demander_nombre("Votre choix:", len(liste_options))

#ici votre programme principal
def programme_principal():
    """programme reliant menu deamnde et les fcts de histoire2foot.py
    """
    liste_options = ["Charger un fichier", "Sauver un fichier", "Afficher les infos d'un match",
                     "Afficher les infos d'une équipe",
                     "Fusionner des listes en modifiant la liste de match",
                     "Lister les matchs déroulés dans une ville",
                     "Afficher les infos d'une compet", "Afficher les infos d'une liste",
                     "Quitter"
                    ]
    liste_match = []
    while True:
        rep = menu("MENU INTERACTION", liste_options)
        if rep is None:
            print("Cette option n'existe pas")
        elif rep == 1:
            print("Nom du fichier: ")
            fichier = input()
            liste_match = histoire2foot.charger_matchs(fichier)
            print(len(liste_match), " matchs dans la liste")
        elif rep == 2:
            print("Nom fichier où sauver: ")
            fic = input()
            histoire2foot.sauver_matchs(liste_match, fic)
        elif rep == 3:
            print("Entrez le numéro du match: ")
            match = int(input())
            if liste_match == []:
                print("Aucune liste chargée")
            elif match > len(liste_match):
                print("Pas de match avec ce numéro")
            else:
                print("L'équipe gagnante est ", histoire2foot.equipe_gagnante(liste_match[match-1]))
                #match-1 pour que l'utilisateur entre le numero du match et se base sur la longeur du
                #fichier chargé -> pas besoin de trouver l ind
                if histoire2foot.victoire_a_domicile(liste_match[match-1]):
                    print("C'est une victoire à domicile")
                print(histoire2foot.nb_buts_marques(liste_match[match-1]), "buts ont été marqués en tout")
        elif rep == 4:
            print("Equipe choisie: ")
            equi = input()
            if liste_match == []:
                print("Aucune liste chargée")
            elif equi not in histoire2foot.liste_des_equipes(liste_match):
                print("L'équipe n'est pas présente dans la liste chargée")
            else:
                print("Résulats équipe(v, n, d): ", histoire2foot.resultats_equipe(liste_match, equi))
                print("Leur 1ère victoire date du ", histoire2foot.premiere_victoire(liste_match, equi))
                print(histoire2foot.nb_matchs_sans_defaites(liste_match, equi), "match sans défaites")
                if histoire2foot.plus_de_victoires_que_defaites(liste_match, equi):
                    print("Ils ont plus de victoires que de défaites")
        elif rep == 5:
            print("Nom du fichier 1(extension .csv): ")
            fic1 = input()
            print("Nom du fichier 2(extension .csv): ")
            fic2 = input()
            liste1 = histoire2foot.charger_matchs(fic1)
            liste2 = histoire2foot.charger_matchs(fic2)
            liste_match = histoire2foot.fusionner_matchs(liste1, liste2)
            print("La fusion a été réalisée.")
        elif rep == 6:
            print("Nom de la ville: ")
            ville = input()
            if liste_match == []:
                print("Aucune liste chargée")
            elif histoire2foot.matchs_ville(liste_match, ville) == []:
                print("La ville n'est pas présente dans le fichier chargé")
            else:
                print("Les matchs dans", ville, "sont", histoire2foot.matchs_ville(liste_match, ville))
        elif rep == 7:
            print("Nom de la competition: ")
            comp = input()
            if liste_match == []:
                print("Aucune liste chargée")
            elif histoire2foot.nombre_moyen_buts(liste_match, comp) is None:
                print("La compétition n'est pas présente dans le fichier chargé")
            else:
                print("Buts moyens de ", comp, ": ", histoire2foot.nombre_moyen_buts(liste_match, comp))
        elif rep == 8:
            if liste_match == []:
                print("Aucune liste chargée")
            else:
                print("Voici les informations de la liste chargée")
                print("Voici la liste des équipes: ")
                print(histoire2foot.liste_des_equipes(liste_match))
                print("Les matchs avec les plus gros scores sont: ")
                print(histoire2foot.plus_gros_scores(liste_match))
                print("Les matchs spectaculaires sont: ")
                print(histoire2foot.matchs_spectaculaires(liste_match))
                print("Les meilleures équipes sont: ")
                print(histoire2foot.meilleures_equipes(liste_match))
        else:
            break
        input("Appuyer sur Entrée pour continuer")
    print("Merci au revoir!")
programme_principal()
